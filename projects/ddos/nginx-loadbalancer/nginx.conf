events {}
http {
    upstream backend {
        server web1:80;
        server web2:80;
    }

    limit_req_zone $binary_remote_addr zone=ratelimit:10m rate=10r/s;

    server {
        listen 80;

        location / {
            limit_req zone=ratelimit burst=20 nodelay;
            # Custom status code for rate-limited requests (429)
            limit_req_status 429;

            proxy_pass http://backend;
            proxy_cache off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Custom error page for rate-limited requests (only 429 errors)
        error_page 429 /rate_limit.html;

        # Location to serve the rate-limited response
        location = /rate_limit.html {
            internal; # Not available to external sources
            return 429 "Rate limit exceeded\n";
        }

        location /stub_status {
            stub_status;
            allow 0.0.0.0/0;  # Allow access from all (or restrict to specific containers/IPs)
            deny all;          # Deny all other requests
        }
    }
}

# https://docs.nginx.com/nginx/admin-guide/load-balancer/http-load-balancer/
